(()=>{var e={};e.id=217,e.ids=[217],e.modules={399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:e=>{"use strict";e.exports=require("buffer")},4770:e=>{"use strict";e.exports=require("crypto")},7702:e=>{"use strict";e.exports=require("events")},2615:e=>{"use strict";e.exports=require("http")},8791:e=>{"use strict";e.exports=require("https")},8216:e=>{"use strict";e.exports=require("net")},8621:e=>{"use strict";e.exports=require("punycode")},6162:e=>{"use strict";e.exports=require("stream")},2452:e=>{"use strict";e.exports=require("tls")},7360:e=>{"use strict";e.exports=require("url")},1568:e=>{"use strict";e.exports=require("zlib")},8359:()=>{},3739:()=>{},602:(e,t,r)=>{"use strict";r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{GET:()=>p,POST:()=>c});var o=r(9303),a=r(8716),n=r(3131),i=r(7070);let u=(0,r(2438).eI)("https://placeholder.supabase.co",process.env.SUPABASE_SERVICE_ROLE_KEY);async function c(e){try{let{content:t,conversationId:r,userId:s,authorName:o}=await e.json();if(!t||!r||!s)return i.NextResponse.json({error:"Missing required fields: content, conversationId, userId"},{status:400});let{data:a,error:n}=await u.from("messages").insert({content:t,room_id:r,user_id:s}).select().single();if(n)return i.NextResponse.json({error:"Failed to create message"},{status:500});return i.NextResponse.json({success:!0,message:{id:a.id,content:a.content,authorName:a.authorName,createdAt:a.createdAt,conversationId:a.conversationId}})}catch(e){return console.error("Message creation error:",e),i.NextResponse.json({error:"Failed to send message. Please try again."},{status:500})}}async function p(e){try{let{searchParams:t}=new URL(e.url),r=t.get("conversationId"),s=parseInt(t.get("limit")||"50"),o=parseInt(t.get("offset")||"0");if(!r)return i.NextResponse.json({error:"Missing conversationId parameter"},{status:400});let{data:a,error:n}=await u.from("messages").select("*").eq("room_id",r).order("created_at",{ascending:!0}).range(o,o+s-1);if(n)return i.NextResponse.json({error:"Failed to fetch messages"},{status:500});return i.NextResponse.json({messages:a,total:a.length,hasMore:a.length===s})}catch(e){return console.error("Get messages error:",e),i.NextResponse.json({error:"Failed to fetch messages. Please try again."},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/messages/route",pathname:"/api/messages",filename:"route",bundlePath:"app/api/messages/route"},resolvedPagePath:"C:\\dev\\kamunity-final\\src\\app\\api\\messages\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:g,serverHooks:m}=d,x="/api/messages/route";function h(){return(0,n.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:g})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972,438],()=>r(602));module.exports=s})();